/*--------------------------------*- C++ -*----------------------------------*\
| solids4foam: solid mechanics and fluid-solid interaction simulations        |
| Version:     v2.0                                                           |
| Web:         https://solids4foam.github.io                                  |
| Disclaimer:  This offering is not approved or endorsed by OpenCFD Limited,  |
|              producer and distributor of the OpenFOAM software via          |
|              www.openfoam.com, and owner of the OPENFOAM® and OpenCFD®      |
|              trade marks.                                                   |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      faSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    // ddt(w)      Euler;
    // ddt(w_0)    steadyState;
    default    steadyState;
}

d2dt2Schemes
{
    default     Euler;
}

interpolationSchemes
{
    default linear;
}

divSchemes
{
    default Gauss linear;
}

gradSchemes
{
    grad(w)    leastSquares;
    grad(theta) leastSquares;
    grad(thetaX) leastSquares;
    grad(thetaY) leastSquares;
    grad(M)     leastSquares;
}

lnGradSchemes
{
}

laplacianSchemes
{
    laplacian(gamma,M) Gauss linear corrected;
    laplacian(gamma,w) Gauss linear corrected;
    laplacian(((E*pow(plateThickness,3))|(12*(1-pow(nu,2)))),w) Gauss linear corrected;
    laplacian(((E*pow(plateThickness,3))|(12*(1+nu))),thetaX) Gauss linear corrected;
    laplacian(((E*pow(plateThickness,3))|(12*(1+nu))),thetaY) Gauss linear corrected;
}

fluxRequired
{
}

// ************************************************************************* //
